{
	"info": {
		"_postman_id": "8d3e2dbb-9a2a-4388-ac92-1b8a83581dd3",
		"name": "Advanced Server Access API",
		"description": "The Advanced Server Access API is a control plane API for operations in Okta Advanced Server Access (formerly ScaleFT)\n\nContact Support:\n Name: Okta Support\n Site: https://support.okta.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "article:audits",
			"item": [
				{
					"name": "List the Audits for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/auditsV2?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"auditsV2"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "List the Audits for a Team.\n\nThis endpoint requires one of the following roles: `reporting_user`, `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "List of Audits",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/auditsV2?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"auditsV2"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"list\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"related_objects\": \"<object>\"\n  },\n  {\n   \"list\": [\n    \"<object>\",\n    \"<object>\"\n   ],\n   \"related_objects\": \"<object>\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "article:clients",
			"item": [
				{
					"name": "List ASA Clients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&all=<boolean>&state=<string>&username=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "all",
									"value": "<boolean>",
									"description": "When 'true', returns all Clients for the Team."
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "One of 'ACTIVE', 'PENDING', 'DELETED'."
								},
								{
									"key": "username",
									"value": "<string>",
									"description": "List Clients assigned to a single User. An empty string returns unassigned Clients."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "By default returns the ASA Clients for the requesting ASA User. Query options can be provided to filter by ASA User or state.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of ASA Clients.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&all=<boolean>&state=<string>&username=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "all",
											"value": "<boolean>"
										},
										{
											"key": "state",
											"value": "<string>"
										},
										{
											"key": "username",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"user_name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"os\": \"<string>\",\n   \"encrypted\": \"<boolean>\",\n   \"state\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"user_name\": \"<string>\",\n   \"description\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"os\": \"<string>\",\n   \"encrypted\": \"<boolean>\",\n   \"state\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Revoke an ASA Client",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client."
								}
							]
						},
						"description": "Revoke an ASA Client's access to this Team\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `authenticated_client`."
					},
					"response": [
						{
							"name": "The ASA Client was revoked successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch an ASA Client",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client."
								}
							]
						},
						"description": "Returns a single ASA Client associated with the ID in the path.\n\nThis endpoint requires one of the following roles: `access_admin`, `reporting_user`, `access_user`."
					},
					"response": [
						{
							"name": "The ASA Client that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"user_name\": \"<string>\",\n \"description\": \"<string>\",\n \"hostname\": \"<string>\",\n \"os\": \"<string>\",\n \"encrypted\": \"<boolean>\",\n \"state\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Approve or assign an ASA Client",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state\": \"<string>\",\n    \"user_name\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "client_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client."
								}
							]
						},
						"description": "Used for ASA Clients enrolled using a token policy or a policy that requires approval\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Client was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"<string>\",\n    \"user_name\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "article:entitlements",
			"item": [
				{
					"name": "List the sudo Entitlements for a team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint lists the sudo Entitlements for a team.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "List of sudo Entitlements.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"name\": \"<regex>\",\n   \"add_env\": [\n    \"<regex>\",\n    \"<regex>\"\n   ],\n   \"description\": \"<string>\",\n   \"opt_no_exec\": \"<boolean>\",\n   \"opt_no_passwd\": \"<boolean>\",\n   \"opt_run_as\": \"<regex>\",\n   \"opt_set_env\": \"<boolean>\",\n   \"structured_commands\": [\n    {\n     \"args\": \"<regex>\",\n     \"args_type\": \"<regex>\",\n     \"command\": \"<regex>\",\n     \"command_type\": \"<string>\",\n     \"rendered_command\": \"<string>\"\n    },\n    {\n     \"args\": \"<regex>\",\n     \"args_type\": \"<regex>\",\n     \"command\": \"<regex>\",\n     \"command_type\": \"<string>\",\n     \"rendered_command\": \"<string>\"\n    }\n   ],\n   \"sub_env\": [\n    \"<regex>\",\n    \"<regex>\"\n   ]\n  },\n  {\n   \"name\": \"<regex>\",\n   \"add_env\": [\n    \"<regex>\",\n    \"<regex>\"\n   ],\n   \"description\": \"<string>\",\n   \"opt_no_exec\": \"<boolean>\",\n   \"opt_no_passwd\": \"<boolean>\",\n   \"opt_run_as\": \"<regex>\",\n   \"opt_set_env\": \"<boolean>\",\n   \"structured_commands\": [\n    {\n     \"args\": \"<regex>\",\n     \"args_type\": \"<regex>\",\n     \"command\": \"<regex>\",\n     \"command_type\": \"<string>\",\n     \"rendered_command\": \"<string>\"\n    },\n    {\n     \"args\": \"<regex>\",\n     \"args_type\": \"<regex>\",\n     \"command\": \"<regex>\",\n     \"command_type\": \"<string>\",\n     \"rendered_command\": \"<string>\"\n    }\n   ],\n   \"sub_env\": [\n    \"<regex>\",\n    \"<regex>\"\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a sudo Entitlement",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<regex>\",\n    \"add_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ],\n    \"description\": \"<string>\",\n    \"opt_no_exec\": \"<boolean>\",\n    \"opt_no_passwd\": \"<boolean>\",\n    \"opt_run_as\": \"<regex>\",\n    \"opt_set_env\": \"<boolean>\",\n    \"structured_commands\": [\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        },\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        }\n    ],\n    \"sub_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint creates a sudo Entitlement, corresponding to a set of commands that can be run as sudo for a selected group.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The sudo Entitlement that was created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<regex>\",\n    \"add_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ],\n    \"description\": \"<string>\",\n    \"opt_no_exec\": \"<boolean>\",\n    \"opt_no_passwd\": \"<boolean>\",\n    \"opt_run_as\": \"<regex>\",\n    \"opt_set_env\": \"<boolean>\",\n    \"structured_commands\": [\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        },\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        }\n    ],\n    \"sub_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<regex>\",\n \"add_env\": [\n  \"<regex>\",\n  \"<regex>\"\n ],\n \"description\": \"<string>\",\n \"opt_no_exec\": \"<boolean>\",\n \"opt_no_passwd\": \"<boolean>\",\n \"opt_run_as\": \"<regex>\",\n \"opt_set_env\": \"<boolean>\",\n \"structured_commands\": [\n  {\n   \"args\": \"<regex>\",\n   \"args_type\": \"<regex>\",\n   \"command\": \"<regex>\",\n   \"command_type\": \"<string>\",\n   \"rendered_command\": \"<string>\"\n  },\n  {\n   \"args\": \"<regex>\",\n   \"args_type\": \"<regex>\",\n   \"command\": \"<regex>\",\n   \"command_type\": \"<string>\",\n   \"rendered_command\": \"<string>\"\n  }\n ],\n \"sub_env\": [\n  \"<regex>\",\n  \"<regex>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a single sudo Entitlement",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement."
								}
							]
						},
						"description": "This endpoint deletes the sudo Entitlement corresponding to the provided ID. The Entitlement must not be assigned to any Project in order to be deleted.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The sudo Entitlement was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "sudo_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a single sudo Entitlement",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement."
								}
							]
						},
						"description": "This endpoint fetches the sudo Entitlement corresponding to the provided ID.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The sudo Entitlement that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "sudo_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<regex>\",\n \"add_env\": [\n  \"<regex>\",\n  \"<regex>\"\n ],\n \"description\": \"<string>\",\n \"opt_no_exec\": \"<boolean>\",\n \"opt_no_passwd\": \"<boolean>\",\n \"opt_run_as\": \"<regex>\",\n \"opt_set_env\": \"<boolean>\",\n \"structured_commands\": [\n  {\n   \"args\": \"<regex>\",\n   \"args_type\": \"<regex>\",\n   \"command\": \"<regex>\",\n   \"command_type\": \"<string>\",\n   \"rendered_command\": \"<string>\"\n  },\n  {\n   \"args\": \"<regex>\",\n   \"args_type\": \"<regex>\",\n   \"command\": \"<regex>\",\n   \"command_type\": \"<string>\",\n   \"rendered_command\": \"<string>\"\n  }\n ],\n \"sub_env\": [\n  \"<regex>\",\n  \"<regex>\"\n ]\n}"
						}
					]
				},
				{
					"name": "/v1/teams/:team_name/entitlements/sudo/:sudo_id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<regex>\",\n    \"add_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ],\n    \"description\": \"<string>\",\n    \"opt_no_exec\": \"<boolean>\",\n    \"opt_no_passwd\": \"<boolean>\",\n    \"opt_run_as\": \"<regex>\",\n    \"opt_set_env\": \"<boolean>\",\n    \"structured_commands\": [\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        },\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        }\n    ],\n    \"sub_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"entitlements",
								"sudo",
								":sudo_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "sudo_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Sudo Entitlement."
								}
							]
						},
						"description": "This endpoint updates the sudo Entitlement corresponding to the provided ID.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The sudo Entitlement was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<regex>\",\n    \"add_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ],\n    \"description\": \"<string>\",\n    \"opt_no_exec\": \"<boolean>\",\n    \"opt_no_passwd\": \"<boolean>\",\n    \"opt_run_as\": \"<regex>\",\n    \"opt_set_env\": \"<boolean>\",\n    \"structured_commands\": [\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        },\n        {\n            \"args\": \"<regex>\",\n            \"args_type\": \"<regex>\",\n            \"command\": \"<regex>\",\n            \"command_type\": \"<string>\"\n        }\n    ],\n    \"sub_env\": [\n        \"<regex>\",\n        \"<regex>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/entitlements/sudo/:sudo_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"entitlements",
										"sudo",
										":sudo_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "sudo_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "article:groups",
			"item": [
				{
					"name": "List the ASA Groups for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&contains=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Groups with names that contain value."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of ASA Groups.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&contains=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"federation_approved_at\": \"<dateTime>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"federated_from_team\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"federation_approved_at\": \"<dateTime>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"federated_from_team\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create an ASA Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"federated_from_team\": \"<string>\",\n    \"eu09e\": \"voluptate ullamco do dolore\",\n    \"commodo4a\": -24326444\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Group that was created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"federated_from_team\": \"<string>\",\n    \"eu09e\": \"voluptate ullamco do dolore\",\n    \"commodo4a\": -24326444\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"federation_approved_at\": \"<dateTime>\",\n \"deleted_at\": \"<dateTime>\",\n \"federated_from_team\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Remove an ASA Group from Team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Group was removed successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a single ASA Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `reporting_user`, `access_admin`, `access_user`."
					},
					"response": [
						{
							"name": "The ASA Group that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"roles\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"federation_approved_at\": \"<dateTime>\",\n \"deleted_at\": \"<dateTime>\",\n \"federated_from_team\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an ASA Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Group was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"roles\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List ASA Users of an ASA Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&user_type=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses are 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value."
								},
								{
									"key": "user_type",
									"value": "<string>",
									"description": "Includes ASA Users of the specified type. Valid types are 'human' and 'service'."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `reporting_user`, `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "List of ASA Users.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&user_type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "user_type",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add an ASA User to an ASA Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"details\": {\n        \"email\": \"<regex>\",\n        \"first_name\": \"<string>\",\n        \"full_name\": \"<string>\",\n        \"last_name\": \"<string>\"\n    },\n    \"pariaturf\": -80737366.39632592,\n    \"dolor60\": false,\n    \"laboris24\": 1358521.661681816,\n    \"aliquip5\": 93975561,\n    \"esse3\": -41092030\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA User was added to the ASA Group successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"details\": {\n        \"email\": \"<regex>\",\n        \"first_name\": \"<string>\",\n        \"full_name\": \"<string>\",\n        \"last_name\": \"<string>\"\n    },\n    \"pariaturf\": -80737366.39632592,\n    \"dolor60\": false,\n    \"laboris24\": 1358521.661681816,\n    \"aliquip5\": 93975561,\n    \"esse3\": -41092030\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove an ASA User from an ASA Group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA User was removed from the ASA Group successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List ASA Users of a Team not assigned to a ASA Group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users_not_in_group?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"users_not_in_group"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses are 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value."
								},
								{
									"key": "include_service_users",
									"value": "<string>",
									"description": "Include Service Users in result."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of ASA Users.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/users_not_in_group?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"users_not_in_group"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_service_users",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "article:attributes",
			"item": [
				{
					"name": "List Group Attributes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "conflicting",
									"value": "<boolean>",
									"description": "When true, returns only attributes that conflict with other ASA Group attributes on this Team."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of Attributes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "conflicting",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"attribute_name\": \"<string>\",\n   \"attribute_value\": \"<string>\",\n   \"managed\": \"<boolean>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"attribute_name\": \"<string>\",\n   \"attribute_value\": \"<string>\",\n   \"managed\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Fetch a Group Attribute",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "The Attribute that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										},
										{
											"key": "attribute_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"attribute_name\": \"<string>\",\n \"attribute_value\": \"<string>\",\n \"managed\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Update a Group Attribute",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attribute_name\": \"<string>\",\n    \"attribute_value\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"groups",
								":group_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Group Attribute was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attribute_name\": \"<string>\",\n    \"attribute_value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/groups/:group_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"groups",
										":group_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "group_name"
										},
										{
											"key": "attribute_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List the Attributes for a User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "conflicting",
									"value": "<boolean>",
									"description": "When true, returns only attributes that conflict with other ASA User attributes on this Team."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of User Attributes.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&conflicting=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "conflicting",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"attribute_name\": \"<string>\",\n   \"attribute_value\": \"<string>\",\n   \"managed\": \"<boolean>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"attribute_name\": \"<string>\",\n   \"attribute_value\": \"<string>\",\n   \"managed\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Fetch a User Attribute",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "The User Attribute that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										},
										{
											"key": "attribute_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"attribute_name\": \"<string>\",\n \"attribute_value\": \"<string>\",\n \"managed\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Update a single Attribute for a User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"attribute_name\": \"<string>\",\n    \"attribute_value\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"attributes",
								":attribute_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								},
								{
									"key": "attribute_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Attribute."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Attribute was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attribute_name\": \"<string>\",\n    \"attribute_value\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/attributes/:attribute_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"attributes",
										":attribute_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										},
										{
											"key": "attribute_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "article:projects",
			"item": [
				{
					"name": "List Projects for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&self=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "self",
									"value": "<boolean>",
									"description": "If true, only lists the Projects that this ASA User has been assigned."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `authenticated_client`, `client`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of Projects.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&self=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "self",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"name\": \"<regex>\",\n   \"create_server_users\": \"<boolean>\",\n   \"force_shared_ssh_users\": \"<boolean>\",\n   \"forward_traffic\": \"<boolean>\",\n   \"rdp_session_recording\": \"<boolean>\",\n   \"require_preauth_for_creds\": \"<boolean>\",\n   \"shared_admin_user_name\": \"<string>\",\n   \"shared_standard_user_name\": \"<string>\",\n   \"ssh_session_recording\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<regex>\",\n   \"create_server_users\": \"<boolean>\",\n   \"force_shared_ssh_users\": \"<boolean>\",\n   \"forward_traffic\": \"<boolean>\",\n   \"rdp_session_recording\": \"<boolean>\",\n   \"require_preauth_for_creds\": \"<boolean>\",\n   \"shared_admin_user_name\": \"<string>\",\n   \"shared_standard_user_name\": \"<string>\",\n   \"ssh_session_recording\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<regex>\",\n    \"create_server_users\": \"<boolean>\",\n    \"force_shared_ssh_users\": \"<boolean>\",\n    \"forward_traffic\": \"<boolean>\",\n    \"rdp_session_recording\": \"<boolean>\",\n    \"require_preauth_for_creds\": \"<boolean>\",\n    \"shared_admin_user_name\": \"<string>\",\n    \"shared_standard_user_name\": \"<string>\",\n    \"ssh_session_recording\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Create a Project\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Project that was created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<regex>\",\n    \"create_server_users\": \"<boolean>\",\n    \"force_shared_ssh_users\": \"<boolean>\",\n    \"forward_traffic\": \"<boolean>\",\n    \"rdp_session_recording\": \"<boolean>\",\n    \"require_preauth_for_creds\": \"<boolean>\",\n    \"shared_admin_user_name\": \"<string>\",\n    \"shared_standard_user_name\": \"<string>\",\n    \"ssh_session_recording\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<regex>\",\n \"create_server_users\": \"<boolean>\",\n \"force_shared_ssh_users\": \"<boolean>\",\n \"forward_traffic\": \"<boolean>\",\n \"rdp_session_recording\": \"<boolean>\",\n \"require_preauth_for_creds\": \"<boolean>\",\n \"shared_admin_user_name\": \"<string>\",\n \"shared_standard_user_name\": \"<string>\",\n \"ssh_session_recording\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Delete a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Project was deleted successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `authenticated_client`, `client`, `reporting_user`, `access_user`."
					},
					"response": [
						{
							"name": "The Project that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<regex>\",\n \"create_server_users\": \"<boolean>\",\n \"force_shared_ssh_users\": \"<boolean>\",\n \"forward_traffic\": \"<boolean>\",\n \"rdp_session_recording\": \"<boolean>\",\n \"require_preauth_for_creds\": \"<boolean>\",\n \"shared_admin_user_name\": \"<string>\",\n \"shared_standard_user_name\": \"<string>\",\n \"ssh_session_recording\": \"<boolean>\"\n}"
						}
					]
				},
				{
					"name": "Update a Project",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"create_server_users\": \"<boolean>\",\n    \"forward_traffic\": \"<boolean>\",\n    \"rdp_session_recording\": \"<boolean>\",\n    \"require_preauth_for_creds\": \"<boolean>\",\n    \"ssh_session_recording\": \"<boolean>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Project was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"create_server_users\": \"<boolean>\",\n    \"forward_traffic\": \"<boolean>\",\n    \"rdp_session_recording\": \"<boolean>\",\n    \"require_preauth_for_creds\": \"<boolean>\",\n    \"ssh_session_recording\": \"<boolean>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Client Configuration Options for a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "Use Client Configuration Options to automatically pass settings to any Client logging into a server in this Project.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"config_key\": \"<string>\",\n   \"config_value\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"config_key\": \"<string>\",\n   \"config_value\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add Client Configuration Options for a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"config_key\": \"<string>\",\n    \"config_value\": \"<string>\",\n    \"cupidatat674\": -79813142.25464992\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Client Configuration Option was created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"config_key\": \"<string>\",\n    \"config_value\": \"<string>\",\n    \"cupidatat674\": -79813142.25464992\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"config_key\": \"<string>\",\n \"config_value\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Remove a Client Configuration Option from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options/:client_config_options_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"client_config_options",
								":client_config_options_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "client_config_options_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Client Config Options."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Client Configuration Option was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/client_config_options/:client_config_options_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"client_config_options",
										":client_config_options_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "client_config_options_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Cloud Accounts in a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of Cloud Accounts in a Project",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"provider\": \"<string>\",\n   \"account_id\": \"<string>\",\n   \"description\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"provider\": \"<string>\",\n   \"account_id\": \"<string>\",\n   \"description\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add a Cloud Account to a Project",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "Adding a Cloud Account to a Project allows servers created in that account to register with Okta Advanced Server Access without using a Server Enrollment Token. This is only possible on cloud providers that expose cryptographically signed instance metadata so this is currently restricted to AWS and GCE.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "Cloud Account that was added to the Project",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"provider\": \"<string>\",\n \"account_id\": \"<string>\",\n \"description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Remove a Cloud Account from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"cloud_accounts",
								":cloud_account_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "cloud_account_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Cloud Account."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Cloud Account was removed successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/cloud_accounts/:cloud_account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"cloud_accounts",
										":cloud_account_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "cloud_account_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List all the ASA Groups in a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `reporting_user`, `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "List of ASA Groups in the specified Project",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"name\": \"<string>\",\n   \"group_id\": \"<regex>\",\n   \"server_access\": \"<boolean>\",\n   \"server_admin\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"create_server_group\": \"<boolean>\",\n   \"server_group_name\": \"<string>\",\n   \"unix_gid\": \"<number>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"group_id\": \"<regex>\",\n   \"server_access\": \"<boolean>\",\n   \"server_admin\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"create_server_group\": \"<boolean>\",\n   \"server_group_name\": \"<string>\",\n   \"unix_gid\": \"<number>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add an ASA Group to a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"server_access\": \"<boolean>\",\n    \"server_admin\": \"<boolean>\",\n    \"create_server_group\": \"<boolean>\",\n    \"server_group_name\": \"<string>\",\n    \"unix_gid\": \"<number>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "Adds a pre-existing ASA Group to the Project, enabling server access, with either user or admin permissions and the option to sync an ASA Group to the servers in the Project.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Group was successfully added to the Project.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"server_access\": \"<boolean>\",\n    \"server_admin\": \"<boolean>\",\n    \"create_server_group\": \"<boolean>\",\n    \"server_group_name\": \"<string>\",\n    \"unix_gid\": \"<number>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove an ASA Group from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Group was successfully removed from the Project.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Retrieve ASA Group details for a single Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "Returns details for an ASA Group on an Project.\n\nThis endpoint requires one of the following roles: `reporting_user`, `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "The Project Group requested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"group_id\": \"<regex>\",\n \"server_access\": \"<boolean>\",\n \"server_admin\": \"<boolean>\",\n \"deleted_at\": \"<dateTime>\",\n \"create_server_group\": \"<boolean>\",\n \"profile_attributes\": \"<string>\",\n \"server_group_name\": \"<string>\",\n \"unix_gid\": \"<number>\"\n}"
						}
					]
				},
				{
					"name": "Change the Project properties of an ASA Project Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"server_access\": \"<boolean>\",\n    \"server_admin\": \"<boolean>\",\n    \"create_server_group\": \"<boolean>\",\n    \"server_group_name\": \"<string>\",\n    \"unix_gid\": \"<number>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"groups",
								":group_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "group_name",
									"value": "<string>",
									"description": "(Required) The ASA Group name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA Project Group was successfully updated in the Project.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"server_access\": \"<boolean>\",\n    \"server_admin\": \"<boolean>\",\n    \"create_server_group\": \"<boolean>\",\n    \"server_group_name\": \"<string>\",\n    \"unix_gid\": \"<number>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/groups/:group_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"groups",
										":group_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "group_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a Preauthorization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "A Preauthorization is a time-limited grant for an ASA User to access resources in a specific Project.\n\nThis endpoint requires one of the following roles: `preauthorization`, `access_admin`."
					},
					"response": [
						{
							"name": "The Preauthorization requested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"user_name\": \"<string>\",\n \"expires_at\": \"<dateTime>\",\n \"disabled\": \"<boolean>\",\n \"servers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"projects\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Preauthorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"<string>\",\n    \"expires_at\": \"<dateTime>\",\n    \"disabled\": \"<boolean>\",\n    \"servers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projects\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tempor96\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `preauthorization`."
					},
					"response": [
						{
							"name": "The Preauthorization was created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_name\": \"<string>\",\n    \"expires_at\": \"<dateTime>\",\n    \"disabled\": \"<boolean>\",\n    \"servers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projects\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tempor96\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Lists the Preauthorizations for a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&include_expired=<boolean>&project=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations",
								":authorization_id"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "include_expired",
									"value": "<boolean>"
								},
								{
									"key": "project",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "authorization_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Authorization."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `preauthorization`."
					},
					"response": [
						{
							"name": "List of Preauthorizations",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&include_expired=<boolean>&project=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations",
										":authorization_id"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "include_expired",
											"value": "<boolean>"
										},
										{
											"key": "project",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"user_name\": \"<string>\",\n   \"expires_at\": \"<dateTime>\",\n   \"disabled\": \"<boolean>\",\n   \"servers\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"projects\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  },\n  {\n   \"id\": \"<regex>\",\n   \"user_name\": \"<string>\",\n   \"expires_at\": \"<dateTime>\",\n   \"disabled\": \"<boolean>\",\n   \"servers\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"projects\": [\n    \"<string>\",\n    \"<string>\"\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update a Preauthorization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_name\": \"<string>\",\n    \"expires_at\": \"<dateTime>\",\n    \"disabled\": \"<boolean>\",\n    \"servers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projects\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tempor96\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"preauthorizations",
								":authorization_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "authorization_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Authorization."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `preauthorization`, `access_admin`."
					},
					"response": [
						{
							"name": "The updated Preauthorization",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_name\": \"<string>\",\n    \"expires_at\": \"<dateTime>\",\n    \"disabled\": \"<boolean>\",\n    \"servers\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"projects\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"tempor96\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/preauthorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"preauthorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"user_name\": \"<string>\",\n \"expires_at\": \"<dateTime>\",\n \"disabled\": \"<boolean>\",\n \"servers\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"projects\": [\n  \"<string>\",\n  \"<string>\"\n ]\n}"
						}
					]
				},
				{
					"name": "List Server Enrollment Tokens within a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `server_enrollment_token_viewer`."
					},
					"response": [
						{
							"name": "List of Server Enrollment Tokens in the Project",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"token\": \"<object>\",\n   \"created_by_user\": \"<string>\",\n   \"issued_at\": \"<dateTime>\",\n   \"description\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"token\": \"<object>\",\n   \"created_by_user\": \"<string>\",\n   \"issued_at\": \"<dateTime>\",\n   \"description\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Server Enrollment Token for a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"<string>\",\n    \"quis565\": -78990431,\n    \"eiusmod4\": -97202795,\n    \"temporc\": false,\n    \"utbe0\": \"officia minim\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `server_enrollment_token_creator`."
					},
					"response": [
						{
							"name": "Server Enrollment Token was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"<string>\",\n    \"quis565\": -78990431,\n    \"eiusmod4\": -97202795,\n    \"temporc\": false,\n    \"utbe0\": \"officia minim\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"token\": \"<object>\",\n \"created_by_user\": \"<string>\",\n \"issued_at\": \"<dateTime>\",\n \"description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a Server Enrollment Token from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens",
								":server_enrollment_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "server_enrollment_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server Enrollment Token."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "Server Enrollment Token was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens",
										":server_enrollment_token_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "server_enrollment_token_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch a Server Enrollment Token from a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_enrollment_tokens",
								":server_enrollment_token_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "server_enrollment_token_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server Enrollment Token."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `server_enrollment_token_viewer`."
					},
					"response": [
						{
							"name": "Server Enrollment Token that was requested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_enrollment_tokens/:server_enrollment_token_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_enrollment_tokens",
										":server_enrollment_token_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "server_enrollment_token_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"token\": \"<object>\",\n \"created_by_user\": \"<string>\",\n \"issued_at\": \"<dateTime>\",\n \"description\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List Server Users in a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "A Server User is a representation of a given ASA User that that will be realized on an end server.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of Server Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_users"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"user_name\": \"<string>\",\n   \"server_user_name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"type\": \"<string>\",\n   \"unix_uid\": \"<number>\",\n   \"unix_gid\": \"<number>\",\n   \"admin\": \"<boolean>\",\n   \"windows_server_user_name\": \"<string>\",\n   \"id\": \"<string>\"\n  },\n  {\n   \"user_name\": \"<string>\",\n   \"server_user_name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"type\": \"<string>\",\n   \"unix_uid\": \"<number>\",\n   \"unix_gid\": \"<number>\",\n   \"admin\": \"<boolean>\",\n   \"windows_server_user_name\": \"<string>\",\n   \"id\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get Server User for a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"server_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `reporting_user`, `access_user`, `access_admin`."
					},
					"response": [
						{
							"name": "Server User",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/server_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"server_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"user_name\": \"<string>\",\n   \"server_user_name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"type\": \"<string>\",\n   \"unix_uid\": \"<number>\",\n   \"unix_gid\": \"<number>\",\n   \"admin\": \"<boolean>\",\n   \"windows_server_user_name\": \"<string>\",\n   \"id\": \"<string>\"\n  },\n  {\n   \"user_name\": \"<string>\",\n   \"server_user_name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"type\": \"<string>\",\n   \"unix_uid\": \"<number>\",\n   \"unix_gid\": \"<number>\",\n   \"admin\": \"<boolean>\",\n   \"windows_server_user_name\": \"<string>\",\n   \"id\": \"<string>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List Servers in a Project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "The Servers enrolled in this Project\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `server_admin`."
					},
					"response": [
						{
							"name": "List of Servers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"team_name\": \"<regex>\",\n   \"id\": \"<regex>\",\n   \"project_name\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"alt_names\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"bastion\": \"<string>\",\n   \"canonical_name\": \"<string>\",\n   \"os\": \"<string>\",\n   \"os_type\": \"<string>\",\n   \"services\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"registered_at\": \"<dateTime>\",\n   \"last_seen\": \"<dateTime>\",\n   \"sftd_version\": \"<string>\",\n   \"cloud_provider\": \"<string>\",\n   \"ssh_host_keys\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"instance_details\": {\n    \"account_id\": \"<string>\",\n    \"availability_zone\": \"<string>\",\n    \"instance_id\": \"<string>\",\n    \"instance_type\": \"<string>\",\n    \"networks\": [\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     },\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     }\n    ],\n    \"public_ip_v4\": \"<string>\"\n   },\n   \"state\": \"<string>\",\n   \"managed\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"team_name\": \"<regex>\",\n   \"id\": \"<regex>\",\n   \"project_name\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"alt_names\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"bastion\": \"<string>\",\n   \"canonical_name\": \"<string>\",\n   \"os\": \"<string>\",\n   \"os_type\": \"<string>\",\n   \"services\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"registered_at\": \"<dateTime>\",\n   \"last_seen\": \"<dateTime>\",\n   \"sftd_version\": \"<string>\",\n   \"cloud_provider\": \"<string>\",\n   \"ssh_host_keys\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"instance_details\": {\n    \"account_id\": \"<string>\",\n    \"availability_zone\": \"<string>\",\n    \"instance_id\": \"<string>\",\n    \"instance_type\": \"<string>\",\n    \"networks\": [\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     },\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     }\n    ],\n    \"public_ip_v4\": \"<string>\"\n   },\n   \"state\": \"<string>\",\n   \"managed\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add an Unmanaged Server to a Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hostname\": \"<string>\",\n    \"access_address\": \"<string>\",\n    \"alt_names\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								}
							]
						},
						"description": "Unmanaged Servers don't use Advanced Server Access for authentication, but still receive Client Configuration Options. Create an Unmanaged Server in order to control the options your team members use to connect to appliances, especially bastions which can't fully utilize Advanced Server Access.\n\nThis endpoint requires one of the following roles: `access_admin`, `server_admin`."
					},
					"response": [
						{
							"name": "The created unmanaged server.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hostname\": \"<string>\",\n    \"access_address\": \"<string>\",\n    \"alt_names\": [\n        \"<string>\",\n        \"<string>\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"team_name\": \"<regex>\",\n \"id\": \"<regex>\",\n \"project_name\": \"<string>\",\n \"hostname\": \"<string>\",\n \"alt_names\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"bastion\": \"<string>\",\n \"canonical_name\": \"<string>\",\n \"os\": \"<string>\",\n \"os_type\": \"<string>\",\n \"services\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"registered_at\": \"<dateTime>\",\n \"last_seen\": \"<dateTime>\",\n \"sftd_version\": \"<string>\",\n \"cloud_provider\": \"<string>\",\n \"ssh_host_keys\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"instance_details\": {\n  \"account_id\": \"<string>\",\n  \"availability_zone\": \"<string>\",\n  \"instance_id\": \"<string>\",\n  \"instance_type\": \"<string>\",\n  \"networks\": [\n   {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mac\": \"<string>\",\n    \"vpc_id\": \"<string>\"\n   },\n   {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mac\": \"<string>\",\n    \"vpc_id\": \"<string>\"\n   }\n  ],\n  \"public_ip_v4\": \"<string>\"\n },\n \"state\": \"<string>\",\n \"managed\": \"<boolean>\",\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Remove a Server from a Project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`, `server_admin`."
					},
					"response": [
						{
							"name": "The Server has been removed.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "server_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a Server object",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"projects",
								":project_name",
								"servers",
								":server_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "(Required) The Project name."
								},
								{
									"key": "server_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Server."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `server_admin`."
					},
					"response": [
						{
							"name": "The server object requested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/projects/:project_name/servers/:server_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"projects",
										":project_name",
										"servers",
										":server_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "project_name"
										},
										{
											"key": "server_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"team_name\": \"<regex>\",\n \"id\": \"<regex>\",\n \"project_name\": \"<string>\",\n \"hostname\": \"<string>\",\n \"alt_names\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"bastion\": \"<string>\",\n \"canonical_name\": \"<string>\",\n \"os\": \"<string>\",\n \"os_type\": \"<string>\",\n \"services\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"registered_at\": \"<dateTime>\",\n \"last_seen\": \"<dateTime>\",\n \"sftd_version\": \"<string>\",\n \"cloud_provider\": \"<string>\",\n \"ssh_host_keys\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"instance_details\": {\n  \"account_id\": \"<string>\",\n  \"availability_zone\": \"<string>\",\n  \"instance_id\": \"<string>\",\n  \"instance_type\": \"<string>\",\n  \"networks\": [\n   {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mac\": \"<string>\",\n    \"vpc_id\": \"<string>\"\n   },\n   {\n    \"addresses\": [\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     },\n     {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n     }\n    ],\n    \"mac\": \"<string>\",\n    \"vpc_id\": \"<string>\"\n   }\n  ],\n  \"public_ip_v4\": \"<string>\"\n },\n \"state\": \"<string>\",\n \"managed\": \"<boolean>\",\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "article:teams",
			"item": [
				{
					"name": "List Servers for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/servers?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&project_name=<string>&hostname=<string>&bastion=<string>&canonical_name=<string>&cloud_provider=<string>&alt_names_contains=<string>&state=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"servers"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "project_name",
									"value": "<string>",
									"description": "A Project name"
								},
								{
									"key": "hostname",
									"value": "<string>",
									"description": "A hostname"
								},
								{
									"key": "bastion",
									"value": "<string>",
									"description": "A bastion hostname"
								},
								{
									"key": "canonical_name",
									"value": "<string>",
									"description": "A canonical name"
								},
								{
									"key": "cloud_provider",
									"value": "<string>",
									"description": "A cloud provider. Can be 'aws' or 'gcp'"
								},
								{
									"key": "alt_names_contains",
									"value": "<string>",
									"description": "Include Servers that contain the value of 'alt_name_contains' in their 'alt_names'"
								},
								{
									"key": "state",
									"value": "<string>",
									"description": "State of the Server. Can be 'ACTIVE' or 'INACTIVE'"
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Lists all the Servers enrolled in a Team to which the requesting ASA User has access.\n\nThis endpoint requires one of the following roles: `reporting_user`, `server_admin`, `access_user`, `access_admin`, `authenticated_client`."
					},
					"response": [
						{
							"name": "List of servers.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/servers?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&project_name=<string>&hostname=<string>&bastion=<string>&canonical_name=<string>&cloud_provider=<string>&alt_names_contains=<string>&state=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"servers"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "project_name",
											"value": "<string>"
										},
										{
											"key": "hostname",
											"value": "<string>"
										},
										{
											"key": "bastion",
											"value": "<string>"
										},
										{
											"key": "canonical_name",
											"value": "<string>"
										},
										{
											"key": "cloud_provider",
											"value": "<string>"
										},
										{
											"key": "alt_names_contains",
											"value": "<string>"
										},
										{
											"key": "state",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"team_name\": \"<regex>\",\n   \"id\": \"<regex>\",\n   \"project_name\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"alt_names\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"bastion\": \"<string>\",\n   \"canonical_name\": \"<string>\",\n   \"os\": \"<string>\",\n   \"os_type\": \"<string>\",\n   \"services\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"registered_at\": \"<dateTime>\",\n   \"last_seen\": \"<dateTime>\",\n   \"sftd_version\": \"<string>\",\n   \"cloud_provider\": \"<string>\",\n   \"ssh_host_keys\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"instance_details\": {\n    \"account_id\": \"<string>\",\n    \"availability_zone\": \"<string>\",\n    \"instance_id\": \"<string>\",\n    \"instance_type\": \"<string>\",\n    \"networks\": [\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     },\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     }\n    ],\n    \"public_ip_v4\": \"<string>\"\n   },\n   \"state\": \"<string>\",\n   \"managed\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"team_name\": \"<regex>\",\n   \"id\": \"<regex>\",\n   \"project_name\": \"<string>\",\n   \"hostname\": \"<string>\",\n   \"alt_names\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"bastion\": \"<string>\",\n   \"canonical_name\": \"<string>\",\n   \"os\": \"<string>\",\n   \"os_type\": \"<string>\",\n   \"services\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"registered_at\": \"<dateTime>\",\n   \"last_seen\": \"<dateTime>\",\n   \"sftd_version\": \"<string>\",\n   \"cloud_provider\": \"<string>\",\n   \"ssh_host_keys\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"instance_details\": {\n    \"account_id\": \"<string>\",\n    \"availability_zone\": \"<string>\",\n    \"instance_id\": \"<string>\",\n    \"instance_type\": \"<string>\",\n    \"networks\": [\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     },\n     {\n      \"addresses\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"mac\": \"<string>\",\n      \"vpc_id\": \"<string>\"\n     }\n    ],\n    \"public_ip_v4\": \"<string>\"\n   },\n   \"state\": \"<string>\",\n   \"managed\": \"<boolean>\",\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Fetch Team settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Fetch Team-level settings for a specific Team, such as authentication and enrollment details.\n\nThis endpoint requires one of the following roles: `access_user`, `access_admin`, `instance_admin`."
					},
					"response": [
						{
							"name": "The Team settings requested",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"settings"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"team\": \"<string>\",\n \"approve_device_without_interaction\": \"<boolean>\",\n \"client_session_duration\": \"<double>\",\n \"post_device_enrollment_url\": \"<string>\",\n \"post_login_url\": \"<string>\",\n \"post_logout_url\": \"<string>\",\n \"reactivate_users_via_idp\": \"<boolean>\",\n \"user_provisioning_exact_username\": \"<boolean>\",\n \"web_session_duration\": \"<double>\"\n}"
						}
					]
				},
				{
					"name": "Update Team settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"approve_device_without_interaction\": \"<boolean>\",\n    \"client_session_duration\": \"<double>\",\n    \"post_device_enrollment_url\": \"<string>\",\n    \"post_login_url\": \"<string>\",\n    \"post_logout_url\": \"<string>\",\n    \"reactivate_users_via_idp\": \"<boolean>\",\n    \"user_provisioning_exact_username\": \"<boolean>\",\n    \"web_session_duration\": \"<double>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"settings"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Update team-level settings. Partial updates are permitted. URL parameters are optional and default to unset. To unset a previously-set URL, PUT with the value set to `null`.\n\nThis endpoint requires one of the following roles: `access_admin`, `instance_admin`."
					},
					"response": [
						{
							"name": "The Team settings was successfully updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"approve_device_without_interaction\": \"<boolean>\",\n    \"client_session_duration\": \"<double>\",\n    \"post_device_enrollment_url\": \"<string>\",\n    \"post_login_url\": \"<string>\",\n    \"post_logout_url\": \"<string>\",\n    \"reactivate_users_via_idp\": \"<boolean>\",\n    \"user_provisioning_exact_username\": \"<boolean>\",\n    \"web_session_duration\": \"<double>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"settings"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Fetch statistics for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/team_stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"team_stats"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Provides some general statistics regarding a Team.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The statistics for the Team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/team_stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"team_stats"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"num_human_users\": \"<number>\",\n \"num_service_users\": \"<number>\",\n \"num_groups\": \"<number>\",\n \"num_projects\": \"<number>\",\n \"num_servers\": \"<number>\",\n \"num_gateways\": \"<number>\",\n \"num_clients\": \"<number>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "article:service-users",
			"item": [
				{
					"name": "Issue a Service User token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key_id\": \"<regex>\",\n    \"key_secret\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_token"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "Most calls to the Okta Advanced Server Access API require an HTTP Authorization header with a value of the form `Bearer ${AUTH_TOKEN}`.\nTo retrieve an auth token, you'll need to [create a service user and API key](https://help.okta.com/okta_help.htm?id=ext_asa_service_users), then pass the API key information to this endpoint.\nAuth tokens may expire at any time, so code using them should be prepared to handle a 401 response code by creating a new one."
					},
					"response": [
						{
							"name": "On success, the call will return a JSON object with the bearer token and its expiration date.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key_id\": \"<regex>\",\n    \"key_secret\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_token"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"bearer_token\": \"<string>\",\n \"expires_at\": \"<dateTime>\",\n \"team_name\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List the Service Users for a Team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses are 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value."
								},
								{
									"key": "include_service_users",
									"value": "<string>",
									"description": "Include Service Users in result."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "List of Service Users.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_service_users",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a Service User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<regex>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Service User that was created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<regex>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users"
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"status\": \"<string>\",\n \"details\": {\n  \"email\": \"<regex>\",\n  \"first_name\": \"<string>\",\n  \"full_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n },\n \"user_type\": \"<string>\",\n \"oauth_client_application_id\": \"<string>\",\n \"role_grants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Fetch a Service User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Service User that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"status\": \"<string>\",\n \"details\": {\n  \"email\": \"<regex>\",\n  \"first_name\": \"<string>\",\n  \"full_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n },\n \"user_type\": \"<string>\",\n \"oauth_client_application_id\": \"<string>\",\n \"role_grants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update the status of a Service User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"details\": {\n        \"email\": \"<regex>\",\n        \"first_name\": \"<string>\",\n        \"full_name\": \"<string>\",\n        \"last_name\": \"<string>\"\n    },\n    \"pariaturf\": -80737366.39632592,\n    \"dolor60\": false,\n    \"laboris24\": 1358521.661681816,\n    \"aliquip5\": 93975561,\n    \"esse3\": -41092030\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The Service User that was updated.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"status\": \"<string>\",\n    \"details\": {\n        \"email\": \"<regex>\",\n        \"first_name\": \"<string>\",\n        \"full_name\": \"<string>\",\n        \"last_name\": \"<string>\"\n    },\n    \"pariaturf\": -80737366.39632592,\n    \"dolor60\": false,\n    \"laboris24\": 1358521.661681816,\n    \"aliquip5\": 93975561,\n    \"esse3\": -41092030\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"status\": \"<string>\",\n \"details\": {\n  \"email\": \"<regex>\",\n  \"first_name\": \"<string>\",\n  \"full_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n },\n \"user_type\": \"<string>\",\n \"oauth_client_application_id\": \"<string>\",\n \"role_grants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "List the API keys for a Service User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "List of Service User keys.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"issued_at\": \"<dateTime>\",\n   \"expires_at\": \"<dateTime>\",\n   \"last_used\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"issued_at\": \"<dateTime>\",\n   \"expires_at\": \"<dateTime>\",\n   \"last_used\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Rotate API keys for a Service Users",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "Rotating an API key will automatically set an expiration date on the rest of the API keys a Service User has.\n\nThis endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The new API key and secret.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"issued_at\": \"<dateTime>\",\n \"expires_at\": \"<dateTime>\",\n \"last_used\": \"<dateTime>\",\n \"secret\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete an API key for a Service User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"service_users",
								":user_name",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								},
								{
									"key": "key_id",
									"value": "<string>",
									"description": "(Required) The UUID of the Service User key."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "API key has been successfully deleted.",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/service_users/:user_name/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"service_users",
										":user_name",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										},
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "article:users",
			"item": [
				{
					"name": "List the ASA Users for a team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "starts_with",
									"value": "<string>",
									"description": "Includes ASA Users with name that begins with the value."
								},
								{
									"key": "status",
									"value": "<string>",
									"description": "Includes ASA Users with specified statuses. Valid statuses are 'ACTIVE', 'DISABLED', and 'DELETED'."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Users with name that contains the value."
								},
								{
									"key": "include_service_users",
									"value": "<string>",
									"description": "Include Service Users in result."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of ASA Users.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&starts_with=<string>&status=<string>&contains=<string>&include_service_users=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "starts_with",
											"value": "<string>"
										},
										{
											"key": "status",
											"value": "<string>"
										},
										{
											"key": "contains",
											"value": "<string>"
										},
										{
											"key": "include_service_users",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"status\": \"<string>\",\n   \"details\": {\n    \"email\": \"<regex>\",\n    \"first_name\": \"<string>\",\n    \"full_name\": \"<string>\",\n    \"last_name\": \"<string>\"\n   },\n   \"user_type\": \"<string>\",\n   \"oauth_client_application_id\": \"<string>\",\n   \"role_grants\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"deleted_at\": \"<dateTime>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Fetch an ASA User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "The ASA User that was requested.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<regex>\",\n \"name\": \"<string>\",\n \"status\": \"<string>\",\n \"details\": {\n  \"email\": \"<regex>\",\n  \"first_name\": \"<string>\",\n  \"full_name\": \"<string>\",\n  \"last_name\": \"<string>\"\n },\n \"user_type\": \"<string>\",\n \"oauth_client_application_id\": \"<string>\",\n \"role_grants\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"deleted_at\": \"<dateTime>\"\n}"
						}
					]
				},
				{
					"name": "Update an ASA User",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name"
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_admin`."
					},
					"response": [
						{
							"name": "The ASA User was updated successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name"
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List Groups a specific ASA User is a member of",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/groups?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&contains=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"teams",
								":team_name",
								"users",
								":user_name",
								"groups"
							],
							"query": [
								{
									"key": "offset",
									"value": "<string>",
									"description": "The page offset."
								},
								{
									"key": "count",
									"value": "<number>",
									"description": "The number of objects per page."
								},
								{
									"key": "descending",
									"value": "<boolean>",
									"description": "The object order."
								},
								{
									"key": "prev",
									"value": "<boolean>",
									"description": "The direction of paging."
								},
								{
									"key": "contains",
									"value": "<string>",
									"description": "Includes ASA Groups with names that contain value."
								}
							],
							"variable": [
								{
									"key": "team_name",
									"value": "<string>",
									"description": "(Required) The name of your Team."
								},
								{
									"key": "user_name",
									"value": "<string>",
									"description": "(Required) The relevant username."
								}
							]
						},
						"description": "This endpoint requires one of the following roles: `access_user`, `access_admin`, `reporting_user`."
					},
					"response": [
						{
							"name": "List of Groups.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/teams/:team_name/users/:user_name/groups?offset=<string>&count=<number>&descending=<boolean>&prev=<boolean>&contains=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teams",
										":team_name",
										"users",
										":user_name",
										"groups"
									],
									"query": [
										{
											"key": "offset",
											"value": "<string>"
										},
										{
											"key": "count",
											"value": "<number>"
										},
										{
											"key": "descending",
											"value": "<boolean>"
										},
										{
											"key": "prev",
											"value": "<boolean>"
										},
										{
											"key": "contains",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "team_name"
										},
										{
											"key": "user_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "<string>",
									"description": "Link Header defined by RFC 8288.\n\nA Link header with rel=\"next\" indicates that a subsequent page is available and contains the URL which should be used to fetch it.\n\nA Link header with rel=\"prev\" indicates that a previous page is available and contains the URL which should be used to fetch it."
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"list\": [\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"federation_approved_at\": \"<dateTime>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"federated_from_team\": \"<string>\"\n  },\n  {\n   \"id\": \"<regex>\",\n   \"name\": \"<string>\",\n   \"roles\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"federation_approved_at\": \"<dateTime>\",\n   \"deleted_at\": \"<dateTime>\",\n   \"federated_from_team\": \"<string>\"\n  }\n ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://app.scaleft.com",
			"type": "string"
		}
	]
}