{
	"info": {
		"_postman_id": "0504d24d-68a2-4a80-bc5b-685e693cefd4",
		"name": "API Access Management (OAuth 2.0)  (Okta API)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Credentials Operations",
			"item": [
				{
					"name": "List Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/credentials/keys",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"credentials",
								"keys"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/credentials/keys/{{keyId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"credentials",
								"keys",
								"{{keyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rotate Keys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"use\": \"sig\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/credentials/lifecycle/keyRotate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"credentials",
								"lifecycle",
								"keyRotate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OAuth2 Claim Operations",
			"item": [
				{
					"name": "List OAuth2 Claims",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/claims",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"claims"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create OAuth2 Claim",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"carDriving\",\n\t\"status\": \"ACTIVE\",\n\t\"claimType\": \"RESOURCE\",\n\t\"valueType\": \"EXPRESSION\",\n\t\"value\": \"\\\"driving!\\\"\",\n\t\"conditions\": {\n\t\t\"scopes\": [\n\t\t\t\"car:drive\"\n\t\t]\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/claims",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"claims"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get OAuth2 Claim",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/claims/{{claimId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"claims",
								"{{claimId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update OAuth2 Claim",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"carDriving\",\n\t\"status\": \"ACTIVE\",\n\t\"claimType\": \"RESOURCE\",\n\t\"valueType\": \"EXPRESSION\",\n\t\"value\": \"\\\"driving!\\\"\",\n\t\"conditions\": {\n\t\t\"scopes\": [\n\t\t\t\"car:drive\"\n\t\t]\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/claims/{{claimId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"claims",
								"{{claimId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete OAuth2 Claim",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/claims/{{claimId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"claims",
								"{{claimId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OAuth2 Scope Operations",
			"item": [
				{
					"name": "List OAuth2 Scopes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/scopes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create OAuth2 Scope",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Drive car\",\n\t\"name\": \"car:drive\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/scopes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get OAuth2 Scope",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/scopes/{{scopeId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"scopes",
								"{{scopeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update OAuth2 Scope",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"Drive car\",\n\t\"name\": \"car:drive\"\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/scopes/{{scopeId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"scopes",
								"{{scopeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete OAuth2 Scope",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/scopes/{{scopeId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"scopes",
								"{{scopeId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resource Access Policy Operations",
			"item": [
				{
					"name": "List Resource Access Policies",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Resource Access Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"OAUTH_AUTHORIZATION_POLICY\",\n\t\"status\": \"ACTIVE\",\n\t\"name\": \"Default Policy\",\n\t\"description\": \"Default policy description\",\n\t\"priority\": 1,\n\t\"conditions\": {\n\t\t\"clients\": {\n\t\t\t\"include\": [\n\t\t\t\t\"ALL_CLIENTS\"\n\t\t\t]\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resource Access Policy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Resource Access Policy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"OAUTH_AUTHORIZATION_POLICY\",\n\t\"status\": \"ACTIVE\",\n\t\"name\": \"Default Policy\",\n\t\"description\": \"Default policy description\",\n\t\"priority\": 1,\n\t\"conditions\": {\n\t\t\"clients\": {\n\t\t\t\"include\": [\n\t\t\t\t\"ALL_CLIENTS\"\n\t\t\t]\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Resource Access Policy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Resource Access Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/lifecycle/activate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"lifecycle",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate Resource Access Policy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/lifecycle/deactivate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"lifecycle",
								"deactivate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Resource Access Policy Rule Operations",
			"item": [
				{
					"name": "List Resource Access Policy Rules",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Resource Access Policy Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"RESOURCE_ACCESS\",\n    \"status\": \"ACTIVE\",\n    \"name\": \"Default Policy Rule\",\n    \"priority\": 1,\n    \"conditions\": {\n      \"people\": {\n        \"groups\": {\n          \"include\": [\n            \"EVERYONE\"\n          ]\n        }\n      },\n      \"grantTypes\": {\n        \"include\": [\n          \"implicit\",\n          \"client_credentials\",\n          \"authorization_code\",\n          \"password\"\n        ]\n      },\n      \"scopes\": {\n        \"include\": [\n          \"car:drive\"\n        ]\n      }\n    },\n    \"actions\": {\n      \"token\": {\n        \"accessTokenLifetimeMinutes\": 60,\n        \"refreshTokenLifetimeMinutes\": 0,\n        \"refreshTokenWindowMinutes\": 10080\n      }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resource Access Policy Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules/{{ruleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules",
								"{{ruleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Resource Access Policy Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": \"RESOURCE_ACCESS\",\n    \"status\": \"ACTIVE\",\n    \"name\": \"Default Policy Rule\",\n    \"priority\": 1,\n    \"conditions\": {\n      \"people\": {\n        \"groups\": {\n          \"include\": [\n            \"EVERYONE\"\n          ]\n        }\n      },\n      \"grantTypes\": {\n        \"include\": [\n          \"implicit\",\n          \"client_credentials\",\n          \"authorization_code\",\n          \"password\"\n        ]\n      },\n      \"scopes\": {\n        \"include\": [\n          \"car:drive\"\n        ]\n      }\n    },\n    \"actions\": {\n      \"token\": {\n        \"accessTokenLifetimeMinutes\": 60,\n        \"refreshTokenLifetimeMinutes\": 0,\n        \"refreshTokenWindowMinutes\": 10080\n      }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules/{{ruleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules",
								"{{ruleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Resource Access Policy Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules/{{ruleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules",
								"{{ruleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate Resource Access Policy Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules/{{ruleId}}/lifecycle/activate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules",
								"{{ruleId}}",
								"lifecycle",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate Resource Access Policy Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "SSWS {{apikey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/api/v1/authorizationServers/{{authorizationServerId}}/policies/{{policyId}}/rules/{{ruleId}}/lifecycle/deactivate",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"authorizationServers",
								"{{authorizationServerId}}",
								"policies",
								"{{policyId}}",
								"rules",
								"{{ruleId}}",
								"lifecycle",
								"deactivate"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Get OpenID Provider Metadata",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/.well-known/openid-configuration?client_id={{clientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						".well-known",
						"openid-configuration"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get OAuth2 Metadata",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/.well-known/oauth-authorization-server?client_id={{clientId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						".well-known",
						"oauth-authorization-server"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Introspect Token",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "text"
						},
						{
							"key": "token_type_hint",
							"value": "access_token",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/introspect",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"introspect"
					]
				}
			},
			"response": []
		},
		{
			"name": "Introspect Token with Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "text"
						},
						{
							"key": "token_type_hint",
							"value": "access_token",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/introspect",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"introspect"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Token",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "text"
						},
						{
							"key": "token_type_hint",
							"value": "access_token",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/revoke",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Revoke Token with Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "text"
						},
						{
							"key": "token_type_hint",
							"value": "access_token",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/revoke",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"revoke"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get UserInfo",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{accessToken}}"
					}
				],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/userinfo",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"userinfo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=id_token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "id_token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID Token + Access Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=id_token token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "id_token token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code&response_mode=query&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code"
						},
						{
							"key": "response_mode",
							"value": "query"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code with PKCE  (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code&response_mode=query&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}&code_challenge_method=S256&code_challenge={{codeChallenge}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code"
						},
						{
							"key": "response_mode",
							"value": "query"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						},
						{
							"key": "code_challenge_method",
							"value": "S256"
						},
						{
							"key": "code_challenge",
							"value": "{{codeChallenge}}"
						}
					]
				},
				"description": "```js\nconst base64url = require('base64url');\nvar crypto = require('crypto');\ncrypto.createHash('sha256').update('at83hsVcajT5nfc2FVnKSxI6bsuU2Tq2aoVhEFhEO1A').digest();\nvar buffer = crypto.createHash('sha256').update('at83hsVcajT5nfc2FVnKSxI6bsuU2Tq2aoVhEFhEO1A').digest();\nbase64url.encode(buffer)\n```"
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + Access Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + Access Token with PKCE (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}&code_challenge_method=S256&code_challenge={{codeChallenge}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						},
						{
							"key": "code_challenge_method",
							"value": "S256"
						},
						{
							"key": "code_challenge",
							"value": "{{codeChallenge}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + ID Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code id_token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code id_token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + ID Token with PKCE (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code id_token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}&code_challenge_method=S256&code_challenge={{codeChallenge}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code id_token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						},
						{
							"key": "code_challenge_method",
							"value": "S256"
						},
						{
							"key": "code_challenge",
							"value": "{{codeChallenge}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + ID Token + Access Token (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code token id_token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code token id_token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Authorization Code + ID Token + Access Token with PKCE (Requires Inteceptor)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/authorize?client_id={{clientId}}&response_type=code token id_token&response_mode=fragment&scope={{scopes}}&redirect_uri={{redirectUri}}&state={{state}}&nonce={{$guid}}&code_challenge_method=S256&code_challenge={{codeChallenge}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"authorize"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{clientId}}"
						},
						{
							"key": "response_type",
							"value": "code token id_token"
						},
						{
							"key": "response_mode",
							"value": "fragment"
						},
						{
							"key": "scope",
							"value": "{{scopes}}"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}"
						},
						{
							"key": "state",
							"value": "{{state}}"
						},
						{
							"key": "nonce",
							"value": "{{$guid}}"
						},
						{
							"key": "code_challenge_method",
							"value": "S256"
						},
						{
							"key": "code_challenge",
							"value": "{{codeChallenge}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID Token with Code",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID Token with Code and Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ID Token with Code and PKCE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{clientId}}",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						},
						{
							"key": "code_verifier",
							"value": "{{codeVerifier}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Code",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Code and Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Code and PKCE",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{clientId}}",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "code",
							"value": "{{authorizationCode}}",
							"type": "text"
						},
						{
							"key": "code_verifier",
							"value": "{{codeVerifier}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Refresh Token",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "refresh_token",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						},
						{
							"key": "refresh_token",
							"value": "{{refreshToken}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Refresh Token and Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "refresh_token",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						},
						{
							"key": "refresh_token",
							"value": "{{refreshToken}}",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Resource Owner Password Credentials",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Resource Owner Password Credentials and Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Client Credentials",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{clientId}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{clientSecret}}",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Access Token with Client Credentials and Client Secret JWT",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "redirect_uri",
							"value": "{{redirectUri}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "{{scopes}}",
							"type": "text"
						},
						{
							"key": "client_assertion_type",
							"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
							"type": "text"
						},
						{
							"key": "client_assertion",
							"value": "{{clientSecretJwt}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/oauth2/{{authorizationServerId}}/v1/token",
					"host": [
						"{{url}}"
					],
					"path": [
						"oauth2",
						"{{authorizationServerId}}",
						"v1",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}