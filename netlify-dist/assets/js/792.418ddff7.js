(window.webpackJsonp=window.webpackJsonp||[]).push([[792],{487:function(t,s,e){"use strict";e.r(s);var a=e(8),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("For an Okta Org Authorization Server, you can only create an ID token with a Groups claim, not an access token. For the steps to configure a Groups claim for use with an access token, see the "),e("GuideLink",{attrs:{link:"../use-static-group-whitelist-custom-as"}},[t._v("Use a static group whitelist with a Custom Authorization Server")]),t._v(" section.")],1),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note:")]),t._v(" This step requires the Admin Console. If you are using the Developer Console, select the drop-down list in the upper-left corner and select "),e("strong",[t._v("Classic UI")]),t._v(" to switch.")])]),t._v(" "),e("ol",[e("li",[t._v("In the Admin Console, from the "),e("strong",[t._v("Applications")]),t._v(" menu, select "),e("strong",[t._v("Applications")]),t._v(", and then select the OpenID Connect client application that you want to configure.")]),t._v(" "),e("li",[t._v("Navigate to the "),e("strong",[t._v("Sign On")]),t._v(" tab and click "),e("strong",[t._v("Edit")]),t._v(" in the "),e("strong",[t._v("OpenID Connect ID Token")]),t._v(" section.")]),t._v(" "),e("li",[t._v("In the "),e("strong",[t._v("Groups claim type")]),t._v(" section, select "),e("strong",[t._v("Expression")]),t._v(".")]),t._v(" "),e("li",[t._v("In "),e("strong",[t._v("Group claims expression")]),t._v(", leave the default name "),e("code",[t._v("groups")]),t._v(" (or add it if the box is empty) and then add this expression in the second box: "),e("code",[t._v('getFilteredGroups(app.profile.groupwhitelist, "group.name", 40)')])]),t._v(" "),e("li",[t._v("Click "),e("strong",[t._v("Save")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"request-an-id-token-that-contains-the-groups-claim"}},[t._v("Request an ID token that contains the Groups claim "),e("a",{staticClass:"header-anchor header-link",attrs:{href:"#request-an-id-token-that-contains-the-groups-claim","aria-hidden":"true"}},[e("i",{staticClass:"fa fa-link"})])]),t._v(" "),e("p",[t._v("To obtain a token with the configured Groups claim, send a request for an ID token that includes the Groups claim as a scope to the authorization endpoint. For the specific steps on building the request URL, receiving the response, and decoding the JWT, see "),e("GuideLink",{attrs:{link:"../request-token-claim"}},[t._v("Request a token that contains the claim")]),t._v(".")],1),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note:")]),t._v(" The scopes that you need to include as query parameters are "),e("code",[t._v("openid")]),t._v(" and "),e("code",[t._v("groups")]),t._v(".")])]),t._v(" "),e("p",[t._v("The resulting URL looks something like this:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X GET "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://'),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${yourOktaDomain}")]),t._v("/oauth2/v1/authorize?client_id=0oaoesxtxmPf08QHk0h7\n&response_type=id_token\n&scope=openid%20groups\n&redirect_uri=https%3A%2F%2Fexample.com\n&state=myState\n&nonce="),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${yourNonceValue}")]),t._v('"')]),t._v("\n")])])]),e("p",[t._v("The decoded JWT looks something like this:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sub"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00uixa271s6x7qt8I0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ver"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iss"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${yourOktaDomain}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"aud"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0oaoesxtxmPf08QHk0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"iat"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1574117011")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"exp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1574120611")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"jti"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ID.LPQaDhnBhZ9wy-B5BvamTBs7E2C8EzXuLA5P8Uyx-IE"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"amr"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mfa"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kba"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pwd"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"idp"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"00oixa26ycdNcX0VT0h7"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"nonce"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${yourNonceValue}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"auth_time"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1574117006")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"groups"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"IT"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The ID token contains the group "),e("strong",[t._v("IT")]),t._v(", so the audience ("),e("code",[t._v("aud")]),t._v(") has access to the group information about the user.")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Note:")]),t._v(" For flows other than implicit, post to the token endpoint "),e("code",[t._v("https://${yourOktaDomain}/oauth2/v1/token")]),t._v(" with the user or client that you want. Make sure that the user is assigned to the app and to one of the Groups from your whitelist.")])]),t._v(" "),e("p",[t._v("If the results aren't as expected, start your troubleshooting by inspecting the "),e("router-link",{attrs:{to:"/docs/reference/api/system-log/"}},[t._v("System Log")]),t._v(" to see what went wrong.")],1),t._v(" "),e("NextSectionLink")],1)}),[],!1,null,null,null);s.default=n.exports}}]);