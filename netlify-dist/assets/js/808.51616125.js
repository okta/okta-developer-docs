(window.webpackJsonp=window.webpackJsonp||[]).push([[808],{502:function(e,t,o){"use strict";o.r(t);var i=o(8),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v('If you are building a server-side (or "web") application that is capable of securely storing secrets, then the authorization code flow is the recommended method for controlling access to it.')]),e._v(" "),o("p",[e._v("At a high-level, this flow has the following steps:")]),e._v(" "),o("ul",[o("li",[e._v("Your application directs the browser to the Okta Sign-In page, where the user authenticates.")]),e._v(" "),o("li",[e._v("The browser receives an authorization code from your Okta authorization server.")]),e._v(" "),o("li",[e._v("The authorization code is passed to your application.")]),e._v(" "),o("li",[e._v("Your application sends this code to Okta, and Okta returns access and ID tokens, and optionally a refresh token.")]),e._v(" "),o("li",[e._v("Your application can now use these tokens to call the resource server (for example an API) on behalf of the user.")])]),e._v(" "),o("p",[e._v("For more information on the authorization code flow, including why to use it, see "),o("router-link",{attrs:{to:"/docs/concepts/auth-overview/#authorization-code-flow"}},[e._v("our OAuth 2.0 overview")]),e._v(".")],1),e._v(" "),o("NextSectionLink")],1)}),[],!1,null,null,null);t.default=r.exports}}]);