(window.webpackJsonp=window.webpackJsonp||[]).push([[576],{291:function(e,t,i){"use strict";i.r(t);var n=i(8),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("div",{staticStyle:{"font-size":"0.9em","margin-bottom":"-20px"}},[i("a",{attrs:{href:"/books/api-security/authn/"}},[e._v("‚Üê Authentication")])]),e._v(" "),i("h2",{attrs:{id:"authn-best-practices"}},[e._v("Recommended Best Practices for Authentication "),i("a",{staticClass:"header-anchor header-link",attrs:{href:"#authn-best-practices","aria-hidden":"true"}},[i("i",{staticClass:"fa fa-link"})])]),e._v(" "),i("p",[e._v("Using industry standard authentication protocols will help you secure your API in well-understood, predictable, and scalable ways that allow your team to use established services, components, and libraries while not confusing end users.")]),e._v(" "),i("p",[e._v("If you're building an API for server-side clients, you essentially have three choices when implementing authentication:")]),e._v(" "),i("p",[i("strong",[e._v("HTTP Basic Authentication:")]),e._v(" This is the simplest option, but doesn't provide the security and key rotation benefits of OAuth Client Credentials.")]),e._v(" "),i("p",[i("strong",[e._v("Digest Authentication:")]),e._v(" This is what many large providers use with various customizations, most famously, Amazon. Unless you have a very pressing security need, I recommend you not use Digest Authentication as it requires a lot of engineering work to implement and maintain, and shifts the security burden to you.")]),e._v(" "),i("p",[i("strong",[e._v("OAuth Client Credentials:")]),e._v(" This is the only OAuth flow designed for server-side clients to use. The client will exchange their ID and secret for a token. If you're building an API and want to reduce security risk over the network, using OAuth Client Credentials is a good option.")]),e._v(" "),i("p",[e._v("If you're building an API for a mobile client, you should always use the OIDC Authorization Code flow with PKCE (as explained in the OpenID Connect section above).")]),e._v(" "),i("p",[e._v("If you're building an API for a web app with a server-side backend, you should always use the OIDC Authorization Code flow.")]),e._v(" "),i("p",[e._v("If you're building an API for single-page app (e.g. a React app) that has no server-side backend, then the only type of authentication you can use is the OIDC Implicit flow as described earlier.")]),e._v(" "),i("p",[e._v("By following these guidelines and using the correct form of authentication for the correct type of API, you can feel confident in your implementation and give your users a sense of security, regardless of what type of app client is being used.")])])}),[],!1,null,null,null);t.default=s.exports}}]);